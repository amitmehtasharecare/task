class Autogenerated {
  List<Data>? data;
  int? page;
  int? pageSize;
  int? count;
  int? totalCount;

  Autogenerated(
      {this.data, this.page, this.pageSize, this.count, this.totalCount});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    if (json['data'] != null) {
      data = <Data>[];
      json['data'].forEach((v) {
        data!.add(Data.fromJson(v));
      });
    }
    page = json['page'];
    pageSize = json['pageSize'];
    count = json['count'];
    totalCount = json['totalCount'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    if (this.data != null) {
      data['data'] = this.data!.map((v) => v.toJson()).toList();
    }
    data['page'] = page;
    data['pageSize'] = pageSize;
    data['count'] = count;
    data['totalCount'] = totalCount;
    return data;
  }
}

class Data {
  String? id;
  String? name;
  String? supertype;
  int? convertedRetreatCost;
  Set? set;
  CardImages? images;
  String? hp;
  List<String>? subtypes;
  List<Attack>? attacks;

  Data({
    this.id,
    this.name,
    this.supertype,
    this.convertedRetreatCost,
    this.set,
    this.images,
    this.hp,
    this.subtypes,
    this.attacks,
  });

  Data.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    name = json['name'];
    supertype = json['supertype'];
    convertedRetreatCost = json['convertedRetreatCost'];
    set = json['set'] != null ? Set.fromJson(json['set']) : null;
    hp = json['hp'];
    images =
        json['images'] != null ? CardImages.fromJson(json['images']) : null;
    subtypes =
        json['subtypes'] != null ? List<String>.from(json['subtypes']) : null;
    if (json['attacks'] != null) {
      attacks = <Attack>[];
      json['attacks'].forEach((v) {
        attacks!.add(Attack.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['supertype'] = supertype;
    data['hp'] = hp;
    data['convertedRetreatCost'] = convertedRetreatCost;
    if (set != null) {
      data['set'] = set!.toJson();
    }
    if (images != null) {
      data['images'] = images!.toJson();
    }
    if (subtypes != null) {
      data['subtypes'] = subtypes;
    }
    if (attacks != null) {
      data['attacks'] = attacks!.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class Set {
  String? id;
  String? name;
  String? series;
  int? printedTotal;
  int? total;
  Legalities? legalities;
  String? ptcgoCode;
  String? releaseDate;
  String? updatedAt;
  Images? images;

  Set(
      {this.id,
      this.name,
      this.series,
      this.printedTotal,
      this.total,
      this.legalities,
      this.ptcgoCode,
      this.releaseDate,
      this.updatedAt,
      this.images});

  Set.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    name = json['name'];
    series = json['series'];
    printedTotal = json['printedTotal'];
    total = json['total'];
    legalities = json['legalities'] != null
        ? Legalities.fromJson(json['legalities'])
        : null;
    ptcgoCode = json['ptcgoCode'];
    releaseDate = json['releaseDate'];
    updatedAt = json['updatedAt'];
    images = json['images'] != null ? Images.fromJson(json['images']) : null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['series'] = series;
    data['printedTotal'] = printedTotal;
    data['total'] = total;
    if (legalities != null) {
      data['legalities'] = legalities!.toJson();
    }
    data['ptcgoCode'] = ptcgoCode;
    data['releaseDate'] = releaseDate;
    data['updatedAt'] = updatedAt;
    if (images != null) {
      data['images'] = images!.toJson();
    }
    return data;
  }
}

class Legalities {
  String? unlimited;

  Legalities({this.unlimited});

  Legalities.fromJson(Map<String, dynamic> json) {
    unlimited = json['unlimited'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data['unlimited'] = unlimited;
    return data;
  }
}

class Images {
  String? symbol;
  String? logo;

  Images({this.symbol, this.logo});

  Images.fromJson(Map<String, dynamic> json) {
    symbol = json['symbol'];
    logo = json['logo'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data['symbol'] = symbol;
    data['logo'] = logo;
    return data;
  }
}

class CardImages {
  String? small;
  String? large;

  CardImages({this.small, this.large});

  CardImages.fromJson(Map<String, dynamic> json) {
    small = json['small'];
    large = json['large'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data['small'] = small;
    data['large'] = large;
    return data;
  }
}

class Attack {
  String? name;
  List<String>? cost;
  int? convertedEnergyCost;
  String? damage;
  String? text;

  Attack({
    this.name,
    this.cost,
    this.convertedEnergyCost,
    this.damage,
    this.text,
  });

  Attack.fromJson(Map<String, dynamic> json) {
    name = json['name'];
    cost = json['cost'] != null ? List<String>.from(json['cost']) : null;
    convertedEnergyCost = json['convertedEnergyCost'];
    damage = json['damage'];
    text = json['text'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data['name'] = name;
    data['cost'] = cost;
    data['convertedEnergyCost'] = convertedEnergyCost;
    data['damage'] = damage;
    data['text'] = text;
    return data;
  }
}
